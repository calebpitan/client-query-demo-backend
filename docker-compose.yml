version: '3.8'

networks:
  cache: # redis
  database: # postgres
    driver: bridge

services:
  web:
    build:
      context: .
      target: development
    ports:
      - ${PORT}:${PORT}
      - 9229:9229
    command: yarn start:dev
    volumes:
      - '.:/root/demo_backend'
      - 'node_modules:/root/demo_backend/node_modules'
    networks:
      - cache
      - database
    depends_on:
      - redis
      - postgres
    environment:
      - REDIS_URL=redis://demo_backend_cache # the container name (resolves to whatever the host is when the container is run)
      - DB_HOST=demo_backend_postgres # the container name (resolves to whatever the host is when the container is run)
      - DB_PORT=${POSTGRES_PORT}
      - DB_USER=${POSTGRES_USERNAME}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .db.env
      # - .env

  redis:
    image: 'redis:alpine'
    container_name: demo_backend_cache
    expose:
      - 6379
    networks:
      - cache

  postgres:
    container_name: demo_backend_postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    networks:
      - database
    restart: unless-stopped
    env_file:
      - .db.env

  pgadmin:
    container_name: demo_backend_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - '5050:80'
    networks:
      - database
    restart: unless-stopped
    env_file:
      - .db.env

volumes:
  node_modules:
  postgres:
  pgadmin:
